[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform vec4 original_fur_color_0: hint_color;
uniform vec4 original_fur_color_1: hint_color;
uniform vec4 original_fur_color_2: hint_color;
uniform vec4 new_fur_color_0: hint_color;
uniform vec4 new_fur_color_1: hint_color;
uniform vec4 new_fur_color_2: hint_color;

uniform vec4 original_inner_ear_color_0: hint_color;
uniform vec4 original_inner_ear_color_1: hint_color;
uniform vec4 new_inner_ear_color_0: hint_color;
uniform vec4 new_inner_ear_color_1: hint_color;

uniform vec4 original_chest_patterns_color_0: hint_color;
uniform vec4 original_chest_patterns_color_1: hint_color;
uniform vec4 new_chest_patterns_color_0: hint_color;
uniform vec4 new_chest_patterns_color_1: hint_color;

uniform vec4 original_face_patterns_color_0: hint_color;
uniform vec4 original_face_patterns_color_1: hint_color;
uniform vec4 new_face_patterns_color_0: hint_color;
uniform vec4 new_face_patterns_color_1: hint_color;

uniform vec4 original_teeth_color_0: hint_color;
uniform vec4 original_teeth_color_1: hint_color;
uniform vec4 new_teeth_color_0: hint_color;
uniform vec4 new_teeth_color_1: hint_color;

uniform vec4 original_nose_color_0: hint_color;
uniform vec4 original_nose_color_1: hint_color;
uniform vec4 new_nose_color_0: hint_color;
uniform vec4 new_nose_color_1: hint_color;

uniform vec4 original_sclera_color_0: hint_color;
uniform vec4 original_sclera_color_1: hint_color;
uniform vec4 new_sclera_color_0: hint_color;
uniform vec4 new_sclera_color_1: hint_color;

uniform vec4 original_iris_color_0: hint_color;
uniform vec4 original_iris_color_1: hint_color;
uniform vec4 original_iris_color_2: hint_color;
uniform vec4 original_iris_color_3: hint_color;
uniform vec4 new_iris_color_0: hint_color;
uniform vec4 new_iris_color_1: hint_color;
uniform vec4 new_iris_color_2: hint_color;
uniform vec4 new_iris_color_3: hint_color;

uniform vec4 original_eyebrows_color_0: hint_color;
uniform vec4 original_eyebrows_color_1: hint_color;
uniform vec4 new_eyebrows_color_0: hint_color;
uniform vec4 new_eyebrows_color_1: hint_color;

uniform vec4 original_hair_front_color_0: hint_color;
uniform vec4 original_hair_front_color_1: hint_color;
uniform vec4 new_hair_front_color_0: hint_color;
uniform vec4 new_hair_front_color_1: hint_color;

uniform vec4 original_hair_back_color_0: hint_color;
uniform vec4 original_hair_back_color_1: hint_color;
uniform vec4 original_hair_back_color_2: hint_color;
uniform vec4 new_hair_back_color_0: hint_color;
uniform vec4 new_hair_back_color_1: hint_color;
uniform vec4 new_hair_back_color_2: hint_color;

const float THRESHOLD = 0.05;

void fragment(){
	vec4 screen_color = texture(TEXTURE, UV);
	if (distance(screen_color, original_fur_color_0) <= THRESHOLD){
		COLOR = new_fur_color_0;
	} else if (distance(screen_color, original_fur_color_1) <= THRESHOLD){
		COLOR = new_fur_color_1;
	} else if (distance(screen_color, original_fur_color_2) <= THRESHOLD){
		COLOR = new_fur_color_2;
	} else if (distance(screen_color, original_inner_ear_color_0) <= THRESHOLD){
		COLOR = new_inner_ear_color_0;
	} else if (distance(screen_color, original_inner_ear_color_1) <= THRESHOLD){
		COLOR = new_inner_ear_color_1;
	} else if (distance(screen_color, original_chest_patterns_color_0) <= THRESHOLD){
		COLOR = new_chest_patterns_color_0;
	} else if (distance(screen_color, original_chest_patterns_color_1) <= THRESHOLD){
		COLOR = new_chest_patterns_color_1;
	} else if (distance(screen_color, original_face_patterns_color_0) <= THRESHOLD){
		COLOR = new_face_patterns_color_0;
	} else if (distance(screen_color, original_face_patterns_color_1) <= THRESHOLD){
		COLOR = new_face_patterns_color_1;
	} else if (distance(screen_color, original_teeth_color_0) <= THRESHOLD){
		COLOR = new_teeth_color_0;
	} else if (distance(screen_color, original_teeth_color_1) <= THRESHOLD){
		COLOR = new_teeth_color_1;
	} else if (distance(screen_color, original_nose_color_0) <= THRESHOLD){
		COLOR = new_nose_color_0;
	} else if (distance(screen_color, original_nose_color_1) <= THRESHOLD){
		COLOR = new_nose_color_1;
	} else if (distance(screen_color, original_sclera_color_0) <= THRESHOLD){
		COLOR = new_sclera_color_0;
	} else if (distance(screen_color, original_sclera_color_1) <= THRESHOLD){
		COLOR = new_sclera_color_1;
	} else if (distance(screen_color, original_iris_color_0) <= THRESHOLD){
		COLOR = new_iris_color_0;
	} else if (distance(screen_color, original_iris_color_1) <= THRESHOLD){
		COLOR = new_iris_color_1;
	} else if (distance(screen_color, original_iris_color_2) <= THRESHOLD){
		COLOR = new_iris_color_2;
	} else if (distance(screen_color, original_iris_color_3) <= THRESHOLD){
		COLOR = new_iris_color_3;
	} else if (distance(screen_color, original_eyebrows_color_0) <= THRESHOLD){
		COLOR = new_eyebrows_color_0;
	} else if (distance(screen_color, original_eyebrows_color_1) <= THRESHOLD){
		COLOR = new_eyebrows_color_1;
	} else if (distance(screen_color, original_hair_front_color_0) <= THRESHOLD){
		COLOR = new_hair_front_color_0;
	} else if (distance(screen_color, original_hair_front_color_1) <= THRESHOLD){
		COLOR = new_hair_front_color_1;
	} else if (distance(screen_color, original_hair_back_color_0) <= THRESHOLD){
		COLOR = new_hair_back_color_0;
	} else if (distance(screen_color, original_hair_back_color_1) <= THRESHOLD){
		COLOR = new_hair_back_color_1;
	} else if (distance(screen_color, original_hair_back_color_2) <= THRESHOLD){
		COLOR = new_hair_back_color_2;
	} else {
		COLOR = screen_color;
	}
}"

[resource]
shader = SubResource( 7 )
shader_param/original_fur_color_0 = Color( 1, 0.941176, 0.537255, 1 )
shader_param/original_fur_color_1 = Color( 0.972549, 0.772549, 0.227451, 1 )
shader_param/original_fur_color_2 = Color( 0.909804, 0.541176, 0.211765, 1 )
shader_param/new_fur_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_fur_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/new_fur_color_2 = Color( 0.5, 0.5, 0.5, 1 )
shader_param/original_inner_ear_color_0 = Color( 0.815686, 1, 0.917647, 1 )
shader_param/original_inner_ear_color_1 = Color( 0.592157, 0.929412, 0.792157, 1 )
shader_param/new_inner_ear_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_inner_ear_color_1 = Color( 0.74902, 0.74902, 0.74902, 1 )
shader_param/original_chest_patterns_color_0 = Color( 0.827451, 0.592157, 0.254902, 1 )
shader_param/original_chest_patterns_color_1 = Color( 0.521569, 0.372549, 0.223529, 1 )
shader_param/new_chest_patterns_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_chest_patterns_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_face_patterns_color_0 = Color( 0.498039, 0.556863, 0.266667, 1 )
shader_param/original_face_patterns_color_1 = Color( 0.345098, 0.388235, 0.207843, 1 )
shader_param/new_face_patterns_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_face_patterns_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_teeth_color_0 = Color( 0.933333, 0.709804, 0.611765, 1 )
shader_param/original_teeth_color_1 = Color( 0.831373, 0.501961, 0.733333, 1 )
shader_param/new_teeth_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_teeth_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_nose_color_0 = Color( 0.411765, 0.356863, 0.34902, 1 )
shader_param/original_nose_color_1 = Color( 0.215686, 0.2, 0.203922, 1 )
shader_param/new_nose_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_nose_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_sclera_color_0 = Color( 1, 1, 1, 1 )
shader_param/original_sclera_color_1 = Color( 0.45098, 0.937255, 0.909804, 1 )
shader_param/new_sclera_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_sclera_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_iris_color_0 = Color( 0.788235, 0.831373, 0.992157, 1 )
shader_param/original_iris_color_1 = Color( 0.541176, 0.631373, 0.964706, 1 )
shader_param/original_iris_color_2 = Color( 0.270588, 0.447059, 0.890196, 1 )
shader_param/original_iris_color_3 = Color( 0.286275, 0.254902, 0.509804, 1 )
shader_param/new_iris_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_iris_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/new_iris_color_2 = Color( 0.5, 0.5, 0.5, 1 )
shader_param/new_iris_color_3 = Color( 0.25, 0.25, 0.25, 1 )
shader_param/original_eyebrows_color_0 = Color( 0.807843, 0.666667, 0.929412, 1 )
shader_param/original_eyebrows_color_1 = Color( 0.611765, 0.545098, 0.858824, 1 )
shader_param/new_eyebrows_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_eyebrows_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_hair_front_color_0 = Color( 0.796078, 0.776471, 0.756863, 1 )
shader_param/original_hair_front_color_1 = Color( 0.65098, 0.619608, 0.603922, 1 )
shader_param/new_hair_front_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_hair_front_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/original_hair_back_color_0 = Color( 0.945098, 0.392157, 0.121569, 1 )
shader_param/original_hair_back_color_1 = Color( 0.72549, 0.270588, 0.113725, 1 )
shader_param/original_hair_back_color_2 = Color( 0.380392, 0.152941, 0.129412, 1 )
shader_param/new_hair_back_color_0 = Color( 1, 1, 1, 1 )
shader_param/new_hair_back_color_1 = Color( 0.75, 0.75, 0.75, 1 )
shader_param/new_hair_back_color_2 = Color( 0.5, 0.5, 0.5, 1 )
